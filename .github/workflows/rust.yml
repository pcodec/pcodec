# taking some ideas from
# https://docs.github.com/en/actions/use-cases-and-examples/building-and-testing/building-and-testing-rust

name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: "Test"
    runs-on: ubuntu-latest
    env:
      RUST_VERSION: 1.74
    steps:
      - uses: actions/checkout@v4
      - name: Set Rust Toolchain Version
        # should probably match pco's required rust version
        run: rustup install ${{ env.RUST_VERSION }}
      - name: Set Rust Toolchain Version
        run: rustup override set ${{ env.RUST_VERSION }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Test
        run: cargo test --verbose
      - name: Clippy
        run: cargo clippy --no-deps
      - name: Ensure formatted
        run: cargo fmt --check
