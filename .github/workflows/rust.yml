# taking some ideas from
# https://docs.github.com/en/actions/use-cases-and-examples/building-and-testing/building-and-testing-rust

name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: "Test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Override Rust Version
        run: |
          rustup override set $(cargo metadata --no-deps --format-version 1 | jq -r '.packages[] | select (.name == "pco") | .rust_version')
          rustup component add clippy rustfmt
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.8.1
      - name: Install cross
        run: cargo install cross --locked
      - name: Test
        run: cargo test
      - name: Tests on aarch64
        run: cross test -p pco --target aarch64-unknown-linux-gnu
      - name: Clippy
        run: cargo clippy --no-deps
      - name: Ensure formatted
        run: cargo fmt --check