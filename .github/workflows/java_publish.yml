# This file was originally autogenerated by maturin v1.4.0, but has been
# modified by hand.
name: Python Publish

on:
  release:
    types:
      - published

permissions:
  contents: read

env:
  GROUP_ID: io/github/pcodec
# we don't need to set LTO environment variables since that's already configured in the pom.xml

jobs:
  linux:
    runs-on: ubuntu-latest
    if: contains(github.event.release.name, 'Java')
    strategy:
      matrix:
        # taking python set of targets for inspiration
        target: [ x86_64, x86, aarch64, armv7 ]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
      - name: Build library
        # running test should also build the dynamic lib
        run: cd pco_java && mvn test
      - name: Upload dylib
        uses: actions/upload-artifact@v4
        with:
          name: dylib-${{ matrix.target }}
          path: pco_java/target/classes/${{ env.GROUP_ID }}/linux-${{ matrix.target }}

  #  windows:
  #    runs-on: windows-latest
  #    if: contains(github.event.release.name, 'Python')
  #    strategy:
  #      matrix:
  #        target: [ x64 ]
  #    steps:
  #      - uses: actions/checkout@v4
  #      - uses: actions/setup-python@v5
  #        with:
  #          python-version: 3.x
  #          architecture: ${{ matrix.target }}
  #      - name: Build wheels
  #        uses: PyO3/maturin-action@v1
  #        with:
  #          target: ${{ matrix.target }}
  #          args: --release --out dist --interpreter 3.9 3.10 3.11 3.12 3.13 --manifest-path pco_python/Cargo.toml
  #          sccache: 'true'
  #      - name: Upload wheels
  #        uses: actions/upload-artifact@v4
  #        with:
  #          name: wheels-windows-${{ matrix.target }}
  #          path: dist
  #
  #  macos:
  #    runs-on: macos-latest
  #    if: contains(github.event.release.name, 'Python')
  #    strategy:
  #      matrix:
  #        target: [ x86_64, aarch64 ]
  #    steps:
  #      - uses: actions/checkout@v4
  #      - uses: actions/setup-python@v5
  #        with:
  #          python-version: 3.x
  #      - name: Build wheels
  #        uses: PyO3/maturin-action@v1
  #        with:
  #          target: ${{ matrix.target }}
  #          args: --release --out dist --interpreter 3.9 3.10 3.11 3.12 3.13 --manifest-path pco_python/Cargo.toml
  #          sccache: 'true'
  #      - name: Upload wheels
  #        uses: actions/upload-artifact@v4
  #        with:
  #          name: wheels-macos-${{ matrix.target }}
  #          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: contains(github.event.release.name, 'Java')
    needs: [ linux ] #, windows, macos ]
    #    environment:
    #      name: pypi
    #      url: https://pypi.org/p/pcodec
    #    permissions:
    #      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        path: temp_dylibs
      - name: Add native libs as resources
        run: |
          mkdir -p pco_java/src/main/resources/${{ env.GROUP_ID }}
          cp temp_dylibs/* pco_java/src/main/resources/${{ env.GROUP_ID }}/
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Publish package
        run: cd pco_java && mvn --batch-mode deploy
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_CENTRAL_TOKEN }}